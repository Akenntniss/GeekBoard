/**
 * ==================== FOND FUTURISTE SOBRE - ANIMATIONS VISIBLES ====================
 * Version sobre avec animations subtiles mais visibles
 * Correction des z-index et visibilit√©
 */

// D√©sactiver compl√®tement le syst√®me de particules
document.addEventListener('DOMContentLoaded', () => {
    console.log('üé® Initialisation du fond futuriste sobre...');
    
    // Supprimer tous les √©l√©ments du r√©seau s'ils existent
    const networkCanvas = document.querySelector('.network-canvas-container');
    if (networkCanvas) {
        networkCanvas.remove();
        console.log('üóëÔ∏è Canvas r√©seau supprim√©');
    }
    
    const canvas = document.getElementById('networkCanvas');
    if (canvas) {
        canvas.remove();
        console.log('üóëÔ∏è Canvas particules supprim√©');
    }
    
    // Supprimer les anciens √©l√©ments d'animation
    const elementsToRemove = [
        '.light-rays',
        '.floating-orbs', 
        '.scan-lines',
        '.connection-lines'
    ];
    
    elementsToRemove.forEach(selector => {
        const element = document.querySelector(selector);
        if (element) {
            element.remove();
            console.log(`üóëÔ∏è √âl√©ment ${selector} supprim√©`);
        }
    });
    
    // Ajouter les nouveaux √©l√©ments subtils
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        console.log('üåô Mode sombre d√©tect√© - cr√©ation des √©l√©ments subtils');
        createSubtleElements();
    } else {
        console.log('üåÖ Mode jour d√©tect√© - pas d\'√©l√©ments de fond');
    }
    
    // √âcouter les changements de th√®me
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (e.matches) {
            console.log('üåô Passage en mode sombre - cr√©ation des √©l√©ments');
            createSubtleElements();
        } else {
            console.log('üåÖ Passage en mode jour - suppression des √©l√©ments');
            removeSubtleElements();
        }
    });
});

function createSubtleElements() {
    // V√©rifier si les animations sont autoris√©es
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        console.log('‚ö†Ô∏è Animations r√©duites - pas d\'√©l√©ments de fond');
        return;
    }
    
    // Supprimer les anciens √©l√©ments s'ils existent
    removeSubtleElements();
    
    // Points lumineux discrets - AVEC Z-INDEX N√âGATIF
    const glowPoints = document.createElement('div');
    glowPoints.className = 'subtle-glow-points';
    glowPoints.style.zIndex = '-2'; // N√âGATIF pour √™tre derri√®re tout
    glowPoints.style.position = 'fixed';
    glowPoints.style.top = '0';
    glowPoints.style.left = '0';
    glowPoints.style.width = '100vw';
    glowPoints.style.height = '100vh';
    glowPoints.style.pointerEvents = 'none';
    document.body.appendChild(glowPoints);
    console.log('‚ú® Points lumineux cr√©√©s avec z-index n√©gatif');
    
    // Lueur ambiante - AVEC Z-INDEX N√âGATIF
    const ambientGlow = document.createElement('div');
    ambientGlow.className = 'ambient-glow';
    ambientGlow.style.zIndex = '-3'; // N√âGATIF pour √™tre derri√®re tout
    ambientGlow.style.position = 'fixed';
    ambientGlow.style.top = '0';
    ambientGlow.style.left = '0';
    ambientGlow.style.width = '100vw';
    ambientGlow.style.height = '100vh';
    ambientGlow.style.pointerEvents = 'none';
    document.body.appendChild(ambientGlow);
    console.log('üåä Lueur ambiante cr√©√©e avec z-index n√©gatif');
    
    // D√©grad√© de profondeur - AVEC Z-INDEX N√âGATIF POUR NE PAS BLOQUER
    const depthGradient = document.createElement('div');
    depthGradient.className = 'depth-gradient';
    depthGradient.style.zIndex = '-1'; // N√âGATIF pour √™tre derri√®re tout
    depthGradient.style.position = 'fixed';
    depthGradient.style.top = '0';
    depthGradient.style.left = '0';
    depthGradient.style.width = '100vw';
    depthGradient.style.height = '100vh';
    depthGradient.style.pointerEvents = 'none';
    document.body.appendChild(depthGradient);
    console.log('üìê D√©grad√© de profondeur cr√©√© avec z-index n√©gatif');
    
    // V√©rifier que les √©l√©ments sont bien cr√©√©s
    setTimeout(() => {
        const createdElements = [
            document.querySelector('.subtle-glow-points'),
            document.querySelector('.ambient-glow'),
            document.querySelector('.depth-gradient')
        ];
        
        const visibleCount = createdElements.filter(el => el !== null).length;
        console.log(`‚úÖ ${visibleCount}/3 √©l√©ments de fond cr√©√©s et visibles`);
        
        if (visibleCount < 3) {
            console.warn('‚ö†Ô∏è Certains √©l√©ments de fond ne sont pas cr√©√©s');
        }
    }, 100);
}

function removeSubtleElements() {
    const elementsToRemove = [
        '.subtle-glow-points',
        '.ambient-glow',
        '.depth-gradient'
    ];
    
    let removedCount = 0;
    elementsToRemove.forEach(selector => {
        const element = document.querySelector(selector);
        if (element) {
            element.remove();
            removedCount++;
        }
    });
    
    if (removedCount > 0) {
        console.log(`üóëÔ∏è ${removedCount} √©l√©ments de fond supprim√©s`);
    }
}

// Nettoyage au d√©chargement
window.addEventListener('beforeunload', () => {
    removeSubtleElements();
    console.log('üßπ Nettoyage des √©l√©ments de fond');
});

// D√©sactiver l'ancien syst√®me s'il existe
if (window.networkBackground) {
    window.networkBackground.destroy();
    window.networkBackground = null;
    console.log('üóëÔ∏è Ancien syst√®me de particules d√©sactiv√©');
}

// Debug : v√©rifier les √©l√©ments apr√®s 2 secondes
setTimeout(() => {
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        const elements = [
            document.querySelector('.subtle-glow-points'),
            document.querySelector('.ambient-glow'),
            document.querySelector('.depth-gradient')
        ];
        
        console.log('üîç √âtat des √©l√©ments de fond apr√®s 2s:');
        elements.forEach((el, index) => {
            const names = ['Points lumineux', 'Lueur ambiante', 'D√©grad√© profondeur'];
            if (el) {
                const styles = window.getComputedStyle(el);
                console.log(`  ‚úÖ ${names[index]}: visible (opacity: ${styles.opacity}, z-index: ${styles.zIndex})`);
            } else {
                console.log(`  ‚ùå ${names[index]}: non trouv√©`);
            }
        });
    }
}, 2000);
