/**
 * PROTECTION DES TABLEAUX CONTRE LES MODIFICATIONS DYNAMIQUES
 * 
 * Ce script emp√™che les autres scripts (notamment responsive.js) de modifier
 * la structure des tableaux et causer le d√©calage d'alignement.
 * 
 * PAGES CONCERN√âES :
 * - clients.php
 * - reparations.php  
 * - rachat_appareils.php / rachat_appareils_advanced.php
 */

(function() {
    'use strict';
    
    console.log('üõ°Ô∏è Protection des tableaux activ√©e');
    
    // =============================================================================
    // D√âTECTION DE LA PAGE COURANTE
    // =============================================================================
    
    function detectCurrentPage() {
        const url = window.location.href;
        const params = new URLSearchParams(window.location.search);
        const page = params.get('page');
        
        let currentPage = 'unknown';
        
        if (page === 'clients' || url.includes('clients')) {
            currentPage = 'clients';
        } else if (page === 'reparations' || url.includes('reparations')) {
            currentPage = 'reparations';
        } else if (page === 'rachat_appareils' || url.includes('rachat')) {
            currentPage = 'rachat';
        }
        
        // Ajouter l'attribut data-page au body
        if (document.body && currentPage !== 'unknown') {
            document.body.setAttribute('data-page', currentPage);
            console.log('üìÑ Page d√©tect√©e:', currentPage);
        }
        
        return currentPage;
    }
    
    // =============================================================================
    // PROTECTION CONTRE LES MODIFICATIONS DOM
    // =============================================================================
    
    let protectionActive = false;
    
    function enableProtection() {
        if (protectionActive) return;
        protectionActive = true;
        
        console.log('üîí Activation de la protection DOM');
        
        // Bloquer la modification des classes sur les tableaux
        const originalAddClass = Element.prototype.classList.add;
        Element.prototype.classList.add = function(...classes) {
            // Si c'est un table-responsive et qu'on essaie d'ajouter d-none d-md-block
            if (this.classList.contains('table-responsive') && 
                classes.includes('d-none') && classes.includes('d-md-block')) {
                console.log('üö´ Bloqu√©: Tentative d\'ajout de classes d-none d-md-block sur table-responsive');
                return;
            }
            return originalAddClass.apply(this, classes);
        };
        
        const originalRemoveClass = Element.prototype.classList.remove;
        Element.prototype.classList.remove = function(...classes) {
            // Emp√™cher la suppression de classes importantes
            if (this.classList.contains('table-responsive') && 
                (classes.includes('table-responsive') || classes.includes('d-block'))) {
                console.log('üö´ Bloqu√©: Tentative de suppression de classes importantes sur table-responsive');
                return;
            }
            return originalRemoveClass.apply(this, classes);
        };
        
        // Bloquer l'insertion d'√©l√©ments mobile-cards-container
        const originalInsertBefore = Node.prototype.insertBefore;
        Node.prototype.insertBefore = function(newNode, referenceNode) {
            if (newNode.nodeType === Node.ELEMENT_NODE && 
                newNode.classList && newNode.classList.contains('mobile-cards-container')) {
                console.log('üö´ Bloqu√©: Tentative d\'insertion de mobile-cards-container');
                return newNode; // Retourner le noeud sans l'ins√©rer
            }
            return originalInsertBefore.call(this, newNode, referenceNode);
        };
        
        const originalAppendChild = Node.prototype.appendChild;
        Node.prototype.appendChild = function(child) {
            if (child.nodeType === Node.ELEMENT_NODE && 
                child.classList && child.classList.contains('mobile-cards-container')) {
                console.log('üö´ Bloqu√©: Tentative d\'ajout de mobile-cards-container');
                return child; // Retourner le noeud sans l'ajouter
            }
            return originalAppendChild.call(this, child);
        };
    }
    
    // =============================================================================
    // MUTATION OBSERVER POUR SURVEILLER LES CHANGEMENTS
    // =============================================================================
    
    function startObserver() {
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.type === 'childList') {
                    // Supprimer les mobile-cards-container ajout√©s
                    mutation.addedNodes.forEach(function(node) {
                        if (node.nodeType === Node.ELEMENT_NODE && 
                            node.classList && node.classList.contains('mobile-cards-container')) {
                            console.log('üóëÔ∏è Suppression de mobile-cards-container d√©tect√©');
                            node.remove();
                        }
                    });
                }
                
                if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                    const target = mutation.target;
                    // Restaurer les classes si elles ont √©t√© modifi√©es sur table-responsive
                    if (target.classList.contains('table-responsive')) {
                        if (target.classList.contains('d-none') && target.classList.contains('d-md-block')) {
                            console.log('üîÑ Restauration des classes table-responsive');
                            target.classList.remove('d-none', 'd-md-block');
                            
                            // Forcer l'affichage
                            target.style.display = 'block';
                            target.style.visibility = 'visible';
                            target.style.opacity = '1';
                        }
                    }
                }
                
                if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
                    const target = mutation.target;
                    // Restaurer l'affichage si un script essaie de cacher le tableau
                    if (target.classList.contains('table-responsive') && 
                        (target.style.display === 'none' || target.style.visibility === 'hidden')) {
                        console.log('üîÑ Restauration de l\'affichage table-responsive');
                        target.style.display = 'block';
                        target.style.visibility = 'visible';
                        target.style.opacity = '1';
                    }
                }
            });
        });
        
        // D√©marrer l'observation
        observer.observe(document.body, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeFilter: ['class', 'style']
        });
        
        console.log('üëÄ Observer activ√© pour prot√©ger les tableaux');
        
        // Arr√™ter l'observation apr√®s 10 secondes (le temps que les autres scripts finissent)
        setTimeout(() => {
            observer.disconnect();
            console.log('‚úÖ Observer d√©sactiv√© - Protection termin√©e');
        }, 10000);
    }
    
    // =============================================================================
    // CORRECTION IMM√âDIATE DES TABLEAUX EXISTANTS
    // =============================================================================
    
    function fixExistingTables() {
        console.log('üîß Correction des tableaux existants');
        
        const tableResponsives = document.querySelectorAll('.table-responsive');
        tableResponsives.forEach(function(element) {
            // Supprimer les classes probl√©matiques
            element.classList.remove('d-none', 'd-md-block');
            
            // Forcer l'affichage correct
            element.style.display = 'block';
            element.style.visibility = 'visible';
            element.style.opacity = '1';
            element.style.width = '100%';
            element.style.overflowX = 'auto';
            
            console.log('‚úÖ Table responsive corrig√©e');
        });
        
        // Supprimer tous les mobile-cards-container existants
        const mobileContainers = document.querySelectorAll('.mobile-cards-container');
        mobileContainers.forEach(function(container) {
            console.log('üóëÔ∏è Suppression de mobile-cards-container existant');
            container.remove();
        });
        
        // Forcer l'alignement des colonnes
        const tables = document.querySelectorAll('.table');
        tables.forEach(function(table) {
            // R√©initialiser les styles qui pourraient causer le probl√®me
            table.style.tableLayout = 'auto';
            table.style.width = '100%';
            table.style.borderCollapse = 'separate';
            table.style.borderSpacing = '0';
            
            // Forcer le padding sur toutes les cellules
            const cells = table.querySelectorAll('th, td');
            cells.forEach(function(cell) {
                cell.style.padding = '0.75rem';
                cell.style.boxSizing = 'border-box';
                cell.style.verticalAlign = 'middle';
            });
            
            console.log('‚úÖ Tableau corrig√©');
        });
    }
    
    // =============================================================================
    // INITIALISATION
    // =============================================================================
    
    function initialize() {
        console.log('üöÄ Initialisation de la protection des tableaux');
        
        // D√©tecter la page courante
        const currentPage = detectCurrentPage();
        
        // Activer seulement sur les pages concern√©es
        if (['clients', 'reparations', 'rachat'].includes(currentPage)) {
            console.log('‚úÖ Page concern√©e d√©tect√©e, activation de la protection');
            
            // Activer la protection
            enableProtection();
            
            // Corriger les tableaux existants
            fixExistingTables();
            
            // D√©marrer l'observer
            startObserver();
            
            // Re-corriger apr√®s 1 seconde au cas o√π d'autres scripts modifient les tables
            setTimeout(fixExistingTables, 1000);
            
            // Et encore apr√®s 3 secondes pour √™tre s√ªr
            setTimeout(fixExistingTables, 3000);
            
        } else {
            console.log('‚ÑπÔ∏è Page non concern√©e, protection non activ√©e');
        }
    }
    
    // =============================================================================
    // D√âMARRAGE
    // =============================================================================
    
    // Si le DOM est d√©j√† pr√™t
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initialize);
    } else {
        // DOM d√©j√† pr√™t, initialiser imm√©diatement
        initialize();
    }
    
    // √âgalement initialiser au chargement complet de la page
    if (document.readyState !== 'complete') {
        window.addEventListener('load', function() {
            // Re-corriger une derni√®re fois apr√®s le chargement complet
            setTimeout(fixExistingTables, 500);
        });
    }
    
})(); 