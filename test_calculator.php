<?php
// Script de test pour vÃ©rifier le fonctionnement du calculateur
echo "<h1>Test du Calculateur de Prix</h1>";
echo "<pre>";

// Test de connexion Ã  la base de donnÃ©es
try {
    require_once 'config/database.php';
    initializeShopSession();
    $pdo = getShopDBConnection();
    echo "âœ“ Connexion Ã  la base de donnÃ©es : OK\n";
    echo "âœ“ Magasin actuel : " . ($_SESSION['shop_id'] ?? 'Non dÃ©fini') . "\n";
} catch (Exception $e) {
    echo "âœ— Erreur connexion : " . $e->getMessage() . "\n";
    exit;
}

// Test de la table calculator_settings
try {
    $stmt = $pdo->query("SELECT * FROM calculator_settings WHERE id = 1");
    $settings = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($settings) {
        echo "âœ“ Table calculator_settings : OK\n";
        echo "  - Marge min : " . $settings['margin_min'] . "%\n";
        echo "  - Marge max : " . $settings['margin_max'] . "%\n";
        echo "  - Multiplicateur : " . $settings['difficulty_multiplier'] . "\n";
        echo "  - Tarif horaire : " . $settings['time_rate'] . "â‚¬\n";
        echo "  - API Google : " . (!empty($settings['google_api_key']) ? 'ConfigurÃ©e' : 'Non configurÃ©e') . "\n";
        echo "  - ID Moteur : " . (!empty($settings['google_search_engine_id']) ? $settings['google_search_engine_id'] : 'Non configurÃ©') . "\n";
    } else {
        echo "âœ— Table calculator_settings : Vide\n";
    }
} catch (Exception $e) {
    echo "âœ— Erreur table calculator_settings : " . $e->getMessage() . "\n";
}

// Test de l'API de recherche
echo "\n=== Test de l'API de Recherche ===\n";
try {
    $test_data = [
        'query' => 'Ã©cran iPhone 13 Pro',
        'type' => 'piece',
        'api_key' => $settings['google_api_key'] ?? '',
        'search_engine_id' => $settings['google_search_engine_id'] ?? ''
    ];
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'http://' . $_SERVER['HTTP_HOST'] . '/pages/search_prices_api.php');
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($test_data));
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($http_code == 200) {
        $data = json_decode($response, true);
        if ($data && $data['success']) {
            echo "âœ“ API de recherche : OK\n";
            echo "  - Prix trouvÃ©s : " . count($data['prices']) . "\n";
            if (!empty($data['prices'])) {
                echo "  - Prix min : " . min($data['prices']) . "â‚¬\n";
                echo "  - Prix max : " . max($data['prices']) . "â‚¬\n";
                echo "  - Prix moyen : " . round(array_sum($data['prices']) / count($data['prices']), 2) . "â‚¬\n";
            }
        } else {
            echo "âš  API de recherche : RÃ©ponse invalide\n";
            echo "  - RÃ©ponse : " . $response . "\n";
        }
    } else {
        echo "âœ— API de recherche : Erreur HTTP $http_code\n";
    }
} catch (Exception $e) {
    echo "âœ— Erreur API de recherche : " . $e->getMessage() . "\n";
}

// Test de calcul de prix
echo "\n=== Test de Calcul de Prix ===\n";
try {
    $costPrice = 50.00;
    $repairTime = 30; // 30 minutes
    $difficulty = 'moyen';
    
    $laborCost = ($repairTime / 60) * $settings['time_rate'];
    $difficultyMultiplier = $settings['difficulty_multiplier'];
    $adjustedLaborCost = $laborCost * $difficultyMultiplier;
    $totalCost = $costPrice + $adjustedLaborCost;
    $minPrice = $totalCost * (1 + $settings['margin_min'] / 100);
    $maxPrice = $totalCost * (1 + $settings['margin_max'] / 100);
    $recommendedPrice = ($minPrice + $maxPrice) / 2;
    
    echo "âœ“ Calcul de prix : OK\n";
    echo "  - Prix de revient : " . $costPrice . "â‚¬\n";
    echo "  - Temps de rÃ©paration : " . $repairTime . " minutes\n";
    echo "  - DifficultÃ© : " . $difficulty . "\n";
    echo "  - CoÃ»t main d'Å“uvre : " . round($laborCost, 2) . "â‚¬\n";
    echo "  - CoÃ»t ajustÃ© : " . round($adjustedLaborCost, 2) . "â‚¬\n";
    echo "  - CoÃ»t total : " . round($totalCost, 2) . "â‚¬\n";
    echo "  - Prix minimum : " . round($minPrice, 2) . "â‚¬\n";
    echo "  - Prix maximum : " . round($maxPrice, 2) . "â‚¬\n";
    echo "  - Prix recommandÃ© : " . round($recommendedPrice, 2) . "â‚¬\n";
} catch (Exception $e) {
    echo "âœ— Erreur calcul de prix : " . $e->getMessage() . "\n";
}

echo "\n=== RÃ‰SUMÃ‰ ===\n";
echo "Le calculateur de prix est prÃªt Ã  Ãªtre utilisÃ© !\n";
echo "AccÃ©dez-y via : pages/CalculateurPrix.php\n";

echo "</pre>";
echo "<a href='pages/CalculateurPrix.php' style='display: inline-block; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 10px 0;'>ğŸš€ AccÃ©der au Calculateur</a>";
?>
